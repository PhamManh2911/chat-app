generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  firstName   String?
  lastName    String?
  nickname    String?
  name        String
  picture     String?
  email       String       @unique
  lastOnline  DateTime
  userToChats UserToChat[]
}

model Message {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  value        String
  chat         Chat       @relation(fields: [chatId], references: [id])
  chatId       Int
  userToChat   UserToChat @relation(fields: [userToChatId], references: [id])
  userToChatId Int
}

model UserToChat {
  id          Int            @id @default(autoincrement())
  createdAt   DateTime       @default(now())
  lastSeen    DateTime       @default(now())
  isConnected Boolean        @default(false)
  nickname    String?
  role        UserToChatRole @default(MEMBER)
  user        User           @relation(fields: [userId], references: [id])
  userId      Int
  chat        Chat           @relation(fields: [chatId], references: [id])
  chatId      Int
  messages    Message[]
}

enum UserToChatRole {
  CREATOR
  MODERATOR
  MEMBER
}

model Chat {
  id             Int          @id @default(autoincrement())
  name           String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  numberOfMember Int          @default(2)
  userToChats    UserToChat[]
  messages       Message[]
}
